Logical Function Simplifier (Quine-McCluskey)
[*] Enter a logical function to be simplified
    (ex. "f(A, B, C) = A + BC + ~A~B + ABC" )
[*] Input: 
Sum of products form:
Truth Table: f = ~A~B~C~D + ~A~BC~D + ~A~BCD + ~AB~C~D + ~AB~CD + ~ABCD + AB~CD + ABCD
ABCD | f()
-----|----
0000 |  1
0001 |  0
0010 |  1
0011 |  1
0100 |  1
0101 |  1
0110 |  0
0111 |  1
1000 |  0
1001 |  0
1010 |  0
1011 |  0
1100 |  0
1101 |  1
1110 |  0
1111 |  1

Compressing ...
1-level compression:
COMPRESS(0000, 0010) = 00x0
COMPRESS(0000, 0100) = 0x00
COMPRESS(0010, 0011) = 001x
COMPRESS(0100, 0101) = 010x
COMPRESS(0011, 0111) = 0x11
COMPRESS(0101, 0111) = 01x1
COMPRESS(0101, 1101) = x101
COMPRESS(0111, 1111) = x111
COMPRESS(1101, 1111) = 11x1
2-level compression:
COMPRESS(01x1, 11x1) = x1x1
COMPRESS(x101, x111) = x1x1
3-level compression:

Prime implicants: 
~A~B~D  ~A~C~D  ~A~BC  ~AB~C  ~ACD  BD  

Result of simplifying:
f' = ~A~C~D + ~A~BC + BD
